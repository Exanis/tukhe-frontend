// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should keep styles coherent 1`] = `
Object {
  "bigMediaContainer": Object {
    "height": "80vh",
  },
  "bigMediaLink": Object {
    "flex": "0.1",
    "textAlign": "center",
    "width": "10%",
  },
  "bigMediaPicture": Object {
    "flex": "0.8",
    "floatLeft": "auto",
    "floatRight": "auto",
    "height": "100%",
    "objectFit": "contain",
    "width": "80%",
  },
  "bigMediaPictureContainer": Object {
    "alignItems": "center",
    "display": "flex",
    "height": "calc(100% - 128px)",
    "width": "100%",
  },
  "bigMediaShortcuts": Object {
    "display": "flex",
    "flexDirection": "row",
    "marginBottom": 10,
    "marginLeft": "20%",
    "marginTop": 10,
    "width": "60%",
  },
  "bigMediaShortcutsLinkLeft": Object {
    "color": "#aaa",
    "flex": 1,
    "fontSize": 12,
  },
  "bigMediaShortcutsLinkRight": Object {
    "color": "#aaa",
    "fontSize": 12,
  },
  "bigMediaSubText": Object {
    "marginLeft": "20%",
    "width": "60%",
  },
  "tweetText": Object {
    "& a": Object {
      "&:hover": Object {
        "textDecoration": "underline",
      },
      "&:visited": Object {
        "color": "#aaa",
      },
      "color": "#000",
      "textDecoration": "none",
    },
    "wordBreak": "break-word",
  },
}
`;

exports[`Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RawBigTweetMedia
    author={
      Object {
        "name": "test",
        "protected": true,
        "screen_name": "test",
        "verified": true,
      }
    }
    classes={
      Object {
        "bigMediaPicture": "",
      }
    }
    currentMedia={0}
    displayMediaInPopup={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [
              1,
              2,
              3,
            ],
            -1,
            "tweet text",
            Object {
              "name": "test",
              "protected": true,
              "screen_name": "test",
              "verified": true,
            },
          ],
          Array [
            Array [
              1,
              2,
              3,
            ],
            1,
            "tweet text",
            Object {
              "name": "test",
              "protected": true,
              "screen_name": "test",
              "verified": true,
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    media={
      Object {
        "display_url": "display url",
        "media_url": "media url",
        "type": "media type",
        "video": Object {
          "variant": Array [],
        },
      }
    }
    mediaList={
      Array [
        1,
        2,
        3,
      ]
    }
    text="tweet text"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <ConditionalComponent
            render={false}
          >
            <a>
              <pure(KeyboardArrowLeftIcon)
                fontSize="large"
              />
            </a>
          </ConditionalComponent>
          <ConditionalComponent
            render={true}
          >
            <div />
          </ConditionalComponent>
          <ConditionalComponent
            render={false}
          >
            <img
              className=""
              src="media url:large"
            />
          </ConditionalComponent>
          <ConditionalComponent
            render={true}
          >
            <TweetVideo
              className=""
              gif={false}
              video={
                Object {
                  "variant": Array [],
                }
              }
            />
          </ConditionalComponent>
          <ConditionalComponent
            render={true}
          >
            <a>
              <pure(KeyboardArrowRightIcon)
                fontSize="large"
              />
            </a>
          </ConditionalComponent>
          <ConditionalComponent
            render={false}
          >
            <div />
          </ConditionalComponent>
        </div>,
        <div>
          <a
            href="media url:large"
          >
            <FormattedMessage
              defaultMessage="View image"
              id="widget.twitter.tweet.viewOriginal"
              values={Object {}}
            />
          </a>
          <a
            href="https://display url"
          >
            <FormattedMessage
              defaultMessage="View original tweet"
              id="widget.twitter.tweet.viewImageTweet"
              values={Object {}}
            />
          </a>
        </div>,
        <div>
          <div>
            <WithStyles(RawTweetUserName)
              user={
                Object {
                  "name": "test",
                  "protected": true,
                  "screen_name": "test",
                  "verified": true,
                }
              }
            />
            <WithStyles(Typography)
              variant="body1"
            >
              tweet text
            </WithStyles(Typography)>
          </div>
        </div>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ConditionalComponent
              render={false}
            >
              <a>
                <pure(KeyboardArrowLeftIcon)
                  fontSize="large"
                />
              </a>
            </ConditionalComponent>,
            <ConditionalComponent
              render={true}
            >
              <div />
            </ConditionalComponent>,
            <ConditionalComponent
              render={false}
            >
              <img
                className=""
                src="media url:large"
              />
            </ConditionalComponent>,
            <ConditionalComponent
              render={true}
            >
              <TweetVideo
                className=""
                gif={false}
                video={
                  Object {
                    "variant": Array [],
                  }
                }
              />
            </ConditionalComponent>,
            <ConditionalComponent
              render={true}
            >
              <a>
                <pure(KeyboardArrowRightIcon)
                  fontSize="large"
                />
              </a>
            </ConditionalComponent>,
            <ConditionalComponent
              render={false}
            >
              <div />
            </ConditionalComponent>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <a>
                <pure(KeyboardArrowLeftIcon)
                  fontSize="large"
                />
              </a>,
              "render": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <pure(KeyboardArrowLeftIcon)
                  fontSize="large"
                />,
                "className": undefined,
                "onClick": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fontSize": "large",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "a",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div />,
              "render": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <img
                className=""
                src="media url:large"
              />,
              "render": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "",
                "src": "media url:large",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <TweetVideo
                className=""
                gif={false}
                video={
                  Object {
                    "variant": Array [],
                  }
                }
              />,
              "render": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "",
                "gif": false,
                "video": Object {
                  "variant": Array [],
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <a>
                <pure(KeyboardArrowRightIcon)
                  fontSize="large"
                />
              </a>,
              "render": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <pure(KeyboardArrowRightIcon)
                  fontSize="large"
                />,
                "className": undefined,
                "onClick": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "fontSize": "large",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "a",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div />,
              "render": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              href="media url:large"
            >
              <FormattedMessage
                defaultMessage="View image"
                id="widget.twitter.tweet.viewOriginal"
                values={Object {}}
              />
            </a>,
            <a
              href="https://display url"
            >
              <FormattedMessage
                defaultMessage="View original tweet"
                id="widget.twitter.tweet.viewImageTweet"
                values={Object {}}
              />
            </a>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="View image"
                id="widget.twitter.tweet.viewOriginal"
                values={Object {}}
              />,
              "className": undefined,
              "href": "media url:large",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "View image",
                "id": "widget.twitter.tweet.viewOriginal",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="View original tweet"
                id="widget.twitter.tweet.viewImageTweet"
                values={Object {}}
              />,
              "className": undefined,
              "href": "https://display url",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "View original tweet",
                "id": "widget.twitter.tweet.viewImageTweet",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "a",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            <WithStyles(RawTweetUserName)
              user={
                Object {
                  "name": "test",
                  "protected": true,
                  "screen_name": "test",
                  "verified": true,
                }
              }
            />
            <WithStyles(Typography)
              variant="body1"
            >
              tweet text
            </WithStyles(Typography)>
          </div>,
          "className": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(RawTweetUserName)
                user={
                  Object {
                    "name": "test",
                    "protected": true,
                    "screen_name": "test",
                    "verified": true,
                  }
                }
              />,
              <WithStyles(Typography)
                variant="body1"
              >
                tweet text
              </WithStyles(Typography)>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "user": Object {
                  "name": "test",
                  "protected": true,
                  "screen_name": "test",
                  "verified": true,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "tweet text",
                "variant": "body1",
              },
              "ref": null,
              "rendered": "tweet text",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <ConditionalComponent
              render={false}
            >
              <a>
                <pure(KeyboardArrowLeftIcon)
                  fontSize="large"
                />
              </a>
            </ConditionalComponent>
            <ConditionalComponent
              render={true}
            >
              <div />
            </ConditionalComponent>
            <ConditionalComponent
              render={false}
            >
              <img
                className=""
                src="media url:large"
              />
            </ConditionalComponent>
            <ConditionalComponent
              render={true}
            >
              <TweetVideo
                className=""
                gif={false}
                video={
                  Object {
                    "variant": Array [],
                  }
                }
              />
            </ConditionalComponent>
            <ConditionalComponent
              render={true}
            >
              <a>
                <pure(KeyboardArrowRightIcon)
                  fontSize="large"
                />
              </a>
            </ConditionalComponent>
            <ConditionalComponent
              render={false}
            >
              <div />
            </ConditionalComponent>
          </div>,
          <div>
            <a
              href="media url:large"
            >
              <FormattedMessage
                defaultMessage="View image"
                id="widget.twitter.tweet.viewOriginal"
                values={Object {}}
              />
            </a>
            <a
              href="https://display url"
            >
              <FormattedMessage
                defaultMessage="View original tweet"
                id="widget.twitter.tweet.viewImageTweet"
                values={Object {}}
              />
            </a>
          </div>,
          <div>
            <div>
              <WithStyles(RawTweetUserName)
                user={
                  Object {
                    "name": "test",
                    "protected": true,
                    "screen_name": "test",
                    "verified": true,
                  }
                }
              />
              <WithStyles(Typography)
                variant="body1"
              >
                tweet text
              </WithStyles(Typography)>
            </div>
          </div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ConditionalComponent
                render={false}
              >
                <a>
                  <pure(KeyboardArrowLeftIcon)
                    fontSize="large"
                  />
                </a>
              </ConditionalComponent>,
              <ConditionalComponent
                render={true}
              >
                <div />
              </ConditionalComponent>,
              <ConditionalComponent
                render={false}
              >
                <img
                  className=""
                  src="media url:large"
                />
              </ConditionalComponent>,
              <ConditionalComponent
                render={true}
              >
                <TweetVideo
                  className=""
                  gif={false}
                  video={
                    Object {
                      "variant": Array [],
                    }
                  }
                />
              </ConditionalComponent>,
              <ConditionalComponent
                render={true}
              >
                <a>
                  <pure(KeyboardArrowRightIcon)
                    fontSize="large"
                  />
                </a>
              </ConditionalComponent>,
              <ConditionalComponent
                render={false}
              >
                <div />
              </ConditionalComponent>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <a>
                  <pure(KeyboardArrowLeftIcon)
                    fontSize="large"
                  />
                </a>,
                "render": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <pure(KeyboardArrowLeftIcon)
                    fontSize="large"
                  />,
                  "className": undefined,
                  "onClick": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "fontSize": "large",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "a",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <div />,
                "render": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <img
                  className=""
                  src="media url:large"
                />,
                "render": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "",
                  "src": "media url:large",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <TweetVideo
                  className=""
                  gif={false}
                  video={
                    Object {
                      "variant": Array [],
                    }
                  }
                />,
                "render": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "",
                  "gif": false,
                  "video": Object {
                    "variant": Array [],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <a>
                  <pure(KeyboardArrowRightIcon)
                    fontSize="large"
                  />
                </a>,
                "render": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <pure(KeyboardArrowRightIcon)
                    fontSize="large"
                  />,
                  "className": undefined,
                  "onClick": undefined,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "fontSize": "large",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "a",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <div />,
                "render": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                href="media url:large"
              >
                <FormattedMessage
                  defaultMessage="View image"
                  id="widget.twitter.tweet.viewOriginal"
                  values={Object {}}
                />
              </a>,
              <a
                href="https://display url"
              >
                <FormattedMessage
                  defaultMessage="View original tweet"
                  id="widget.twitter.tweet.viewImageTweet"
                  values={Object {}}
                />
              </a>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="View image"
                  id="widget.twitter.tweet.viewOriginal"
                  values={Object {}}
                />,
                "className": undefined,
                "href": "media url:large",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "View image",
                  "id": "widget.twitter.tweet.viewOriginal",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="View original tweet"
                  id="widget.twitter.tweet.viewImageTweet"
                  values={Object {}}
                />,
                "className": undefined,
                "href": "https://display url",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "View original tweet",
                  "id": "widget.twitter.tweet.viewImageTweet",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "a",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              <WithStyles(RawTweetUserName)
                user={
                  Object {
                    "name": "test",
                    "protected": true,
                    "screen_name": "test",
                    "verified": true,
                  }
                }
              />
              <WithStyles(Typography)
                variant="body1"
              >
                tweet text
              </WithStyles(Typography)>
            </div>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(RawTweetUserName)
                  user={
                    Object {
                      "name": "test",
                      "protected": true,
                      "screen_name": "test",
                      "verified": true,
                    }
                  }
                />,
                <WithStyles(Typography)
                  variant="body1"
                >
                  tweet text
                </WithStyles(Typography)>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "user": Object {
                    "name": "test",
                    "protected": true,
                    "screen_name": "test",
                    "verified": true,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "tweet text",
                  "variant": "body1",
                },
                "ref": null,
                "rendered": "tweet text",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
