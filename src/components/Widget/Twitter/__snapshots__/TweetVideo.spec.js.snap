// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TweetVideo
    className="test class"
    gif={false}
    video={
      Object {
        "variants": Array [
          Object {
            "content_type": "test content",
            "url": "test",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "autoplay": "autoplay",
      "children": Array [
        <source
          src="test"
          type="test content"
        />,
      ],
      "className": "test class",
      "controls": true,
      "loop": false,
      "muted": false,
      "preload": "none",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "test",
        "nodeType": "host",
        "props": Object {
          "src": "test",
          "type": "test content",
        },
        "ref": null,
        "rendered": null,
        "type": "source",
      },
    ],
    "type": "video",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "autoplay": "autoplay",
        "children": Array [
          <source
            src="test"
            type="test content"
          />,
        ],
        "className": "test class",
        "controls": true,
        "loop": false,
        "muted": false,
        "preload": "none",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "test",
          "nodeType": "host",
          "props": Object {
            "src": "test",
            "type": "test content",
          },
          "ref": null,
          "rendered": null,
          "type": "source",
        },
      ],
      "type": "video",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
